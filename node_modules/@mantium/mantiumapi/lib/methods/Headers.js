"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

module.exports = /*#__PURE__*/function () {
  function _class(api_key, organization) {
    _classCallCheck(this, _class);

    this.api_key = api_key;
    this.organization = organization;
  }

  _createClass(_class, [{
    key: "getHeaders",
    value: function getHeaders() {
      var headers = {
        Accept: 'application/json',
        'Content-Type': 'application/json'
      };

      if (this.api_key) {
        headers['Authorization'] = "Bearer ".concat(this.api_key); // TODO(Kedar): Change the static text to dynamic
      }

      if (this.organization) {
        headers['OpenAI-Organization'] = this.organization;
      }

      return headers;
    }
  }]);

  return _class;
}();